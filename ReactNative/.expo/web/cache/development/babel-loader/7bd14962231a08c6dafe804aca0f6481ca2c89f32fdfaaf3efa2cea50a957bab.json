{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport React, { useState, useEffect } from \"react\";\nimport { Colors, Default, Fonts } from \"../constants/styles\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { useTranslation } from \"react-i18next\";\nimport ToggleSwitch from \"toggle-switch-react-native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AppSettingScreen = function AppSettingScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t,\n    i18n = _useTranslation.i18n;\n  var isRtl = i18n.dir() == \"rtl\";\n  function tr(key) {\n    return t(`appSettingScreen:${key}`);\n  }\n  var backAction = function backAction() {\n    navigation.goBack();\n    return true;\n  };\n  useEffect(function () {\n    BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      return BackHandler.removeEventListener(\"hardwareBackPress\", backAction);\n    };\n  }, []);\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    notification = _useState2[0],\n    setNotification = _useState2[1];\n  var switchNotification = function switchNotification() {\n    return setNotification(function (notification) {\n      return !notification;\n    });\n  };\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    location = _useState4[0],\n    setLocation = _useState4[1];\n  var switchLocation = function switchLocation() {\n    return setLocation(function (location) {\n      return !location;\n    });\n  };\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    darkMode = _useState6[0],\n    setDarkMode = _useState6[1];\n  var switchDarkMode = function switchDarkMode() {\n    return setDarkMode(function (dark) {\n      return !dark;\n    });\n  };\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    update = _useState8[0],\n    setUpdate = _useState8[1];\n  var switchUpdate = function switchUpdate() {\n    return setUpdate(function (update) {\n      return !update;\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: Colors.extraLightGrey\n    },\n    children: [_jsxs(View, {\n      style: {\n        paddingVertical: Default.fixPadding * 1.2,\n        flexDirection: isRtl ? \"row-reverse\" : \"row\",\n        alignItems: \"center\",\n        backgroundColor: Colors.primary,\n        paddingHorizontal: Default.fixPadding * 2\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Ionicons, {\n          name: isRtl ? \"arrow-forward\" : \"arrow-back\",\n          size: 25,\n          color: Colors.white\n        })\n      }), _jsx(Text, {\n        style: _objectSpread(_objectSpread({}, Fonts.SemiBold18white), {}, {\n          marginHorizontal: Default.fixPadding * 1.2\n        }),\n        children: \"Appearance\"\n      })]\n    }), _jsx(ScrollView, {\n      showsVerticalScrollIndicator: false,\n      children: _jsxs(View, {\n        style: {\n          flexDirection: isRtl ? \"row-reverse\" : \"row\",\n          marginHorizontal: Default.fixPadding * 2,\n          marginBottom: Default.fixPadding * 3,\n          marginTop: Default.fixPadding * 3\n        },\n        children: [_jsx(Text, {\n          style: _objectSpread(_objectSpread({}, Fonts.Medium16Black), {}, {\n            flex: 8.5,\n            textAlign: isRtl ? \"right\" : \"left\"\n          }),\n          children: tr(\"darkMode\")\n        }), _jsx(ToggleSwitch, {\n          style: {\n            flex: 1.5\n          },\n          isOn: darkMode,\n          onColor: Colors.primary,\n          offColor: Colors.lightGrey,\n          size: \"medium\",\n          onToggle: switchDarkMode\n        })]\n      })\n    })]\n  });\n};\nexport default AppSettingScreen;","map":{"version":3,"names":["React","useState","useEffect","Colors","Default","Fonts","Ionicons","useTranslation","ToggleSwitch","jsx","_jsx","jsxs","_jsxs","AppSettingScreen","_ref","navigation","_useTranslation","t","i18n","isRtl","dir","tr","key","backAction","goBack","BackHandler","addEventListener","removeEventListener","_useState","_useState2","_slicedToArray","notification","setNotification","switchNotification","_useState3","_useState4","location","setLocation","switchLocation","_useState5","_useState6","darkMode","setDarkMode","switchDarkMode","dark","_useState7","_useState8","update","setUpdate","switchUpdate","SafeAreaView","style","flex","backgroundColor","extraLightGrey","children","View","paddingVertical","fixPadding","flexDirection","alignItems","primary","paddingHorizontal","TouchableOpacity","onPress","name","size","color","white","Text","_objectSpread","SemiBold18white","marginHorizontal","ScrollView","showsVerticalScrollIndicator","marginBottom","marginTop","Medium16Black","textAlign","isOn","onColor","offColor","lightGrey","onToggle"],"sources":["/home/aqib/projects/finals_code/RN-HomeService/screens/Appearance.js"],"sourcesContent":["import {\r\n    Text,\r\n    View,\r\n    SafeAreaView,\r\n    ScrollView,\r\n    TouchableOpacity,\r\n    BackHandler,\r\n  } from \"react-native\";\r\n  import React, { useState, useEffect } from \"react\";\r\n  import { Colors, Default, Fonts } from \"../constants/styles\";\r\n  import Ionicons from \"react-native-vector-icons/Ionicons\";\r\n  import { useTranslation } from \"react-i18next\";\r\n  import ToggleSwitch from \"toggle-switch-react-native\";\r\n  \r\n  const AppSettingScreen = ({ navigation }) => {\r\n    \r\n    const { t, i18n } = useTranslation();\r\n  \r\n    const isRtl = i18n.dir() == \"rtl\";\r\n  \r\n    function tr(key) {\r\n      return t(`appSettingScreen:${key}`);\r\n    }\r\n    const backAction = () => {\r\n      navigation.goBack();\r\n      return true;\r\n    };\r\n    useEffect(() => {\r\n      BackHandler.addEventListener(\"hardwareBackPress\", backAction);\r\n  \r\n      return () =>\r\n        BackHandler.removeEventListener(\"hardwareBackPress\", backAction);\r\n    }, []);\r\n  \r\n    const [notification, setNotification] = useState(true);\r\n    const switchNotification = () =>\r\n      setNotification((notification) => !notification);\r\n  \r\n    const [location, setLocation] = useState(true);\r\n    const switchLocation = () => setLocation((location) => !location);\r\n  \r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const switchDarkMode = () => setDarkMode((dark) => !dark);\r\n  \r\n    const [update, setUpdate] = useState(true);\r\n    const switchUpdate = () => setUpdate((update) => !update);\r\n  \r\n    return (\r\n      <SafeAreaView\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: Colors.extraLightGrey,\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            paddingVertical: Default.fixPadding * 1.2,\r\n            flexDirection: isRtl ? \"row-reverse\" : \"row\",\r\n            alignItems: \"center\",\r\n            backgroundColor: Colors.primary,\r\n            paddingHorizontal: Default.fixPadding * 2,\r\n          }}\r\n        >\r\n          <TouchableOpacity onPress={() => navigation.goBack()}>\r\n            <Ionicons\r\n              name={isRtl ? \"arrow-forward\" : \"arrow-back\"}\r\n              size={25}\r\n              color={Colors.white}\r\n            />\r\n          </TouchableOpacity>\r\n          <Text\r\n            style={{\r\n              ...Fonts.SemiBold18white,\r\n              marginHorizontal: Default.fixPadding * 1.2,\r\n            }}\r\n          >\r\n            {(\"Appearance\")}\r\n          </Text>\r\n        </View>\r\n  \r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n         \r\n  \r\n  \r\n          <View\r\n            style={{\r\n              flexDirection: isRtl ? \"row-reverse\" : \"row\",\r\n              marginHorizontal: Default.fixPadding * 2,\r\n              marginBottom: Default.fixPadding * 3,\r\n\r\n              marginTop: Default.fixPadding * 3,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                ...Fonts.Medium16Black,\r\n                flex: 8.5,\r\n                textAlign: isRtl ? \"right\" : \"left\",\r\n              }}\r\n            >\r\n              {tr(\"darkMode\")}\r\n            </Text>\r\n  \r\n            <ToggleSwitch\r\n              style={{ flex: 1.5 }}\r\n              isOn={darkMode}\r\n              onColor={Colors.primary}\r\n              offColor={Colors.lightGrey}\r\n              size=\"medium\"\r\n              onToggle={switchDarkMode}\r\n            />\r\n          </View>\r\n  \r\n          \r\n  \r\n         \r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    );\r\n  };\r\n  \r\n  export default AppSettingScreen;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}