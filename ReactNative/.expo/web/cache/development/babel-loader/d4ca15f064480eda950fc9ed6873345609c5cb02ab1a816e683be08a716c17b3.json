{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useMemo, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DashedLine = function DashedLine(_ref) {\n  var _ref$axis = _ref.axis,\n    axis = _ref$axis === void 0 ? 'horizontal' : _ref$axis,\n    _ref$dashGap = _ref.dashGap,\n    dashGap = _ref$dashGap === void 0 ? 2 : _ref$dashGap,\n    _ref$dashLength = _ref.dashLength,\n    dashLength = _ref$dashLength === void 0 ? 4 : _ref$dashLength,\n    _ref$dashThickness = _ref.dashThickness,\n    dashThickness = _ref$dashThickness === void 0 ? 2 : _ref$dashThickness,\n    _ref$dashColor = _ref.dashColor,\n    dashColor = _ref$dashColor === void 0 ? '#000' : _ref$dashColor,\n    dashStyle = _ref.dashStyle,\n    style = _ref.style;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    lineLength = _useState2[0],\n    setLineLength = _useState2[1];\n  var isRow = axis === 'horizontal';\n  var numOfDashes = Math.ceil(lineLength / (dashGap + dashLength));\n  var dashStyles = useMemo(function () {\n    return {\n      width: isRow ? dashLength : dashThickness,\n      height: isRow ? dashThickness : dashLength,\n      marginRight: isRow ? dashGap : 0,\n      marginBottom: isRow ? 0 : dashGap,\n      backgroundColor: dashColor\n    };\n  }, [dashColor, dashGap, dashLength, dashThickness, isRow]);\n  return _jsx(View, {\n    onLayout: function onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n      setLineLength(isRow ? width : height);\n    },\n    style: [style, isRow ? styles.row : styles.column],\n    children: _toConsumableArray(Array(numOfDashes)).map(function (_, i) {\n      return _jsx(View, {\n        style: [dashStyles, dashStyle]\n      }, i);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  },\n  column: {\n    flexDirection: 'column'\n  }\n});\nexport default DashedLine;","map":{"version":3,"names":["React","useMemo","useState","View","StyleSheet","jsx","_jsx","DashedLine","_ref","_ref$axis","axis","_ref$dashGap","dashGap","_ref$dashLength","dashLength","_ref$dashThickness","dashThickness","_ref$dashColor","dashColor","dashStyle","style","_useState","_useState2","_slicedToArray","lineLength","setLineLength","isRow","numOfDashes","Math","ceil","dashStyles","width","height","marginRight","marginBottom","backgroundColor","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","styles","row","column","children","_toConsumableArray","Array","map","_","i","create","flexDirection"],"sources":["/home/aqib/projects/finals_code/RN-HomeService/node_modules/react-native-dashed-line/src/index.js"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nconst DashedLine = ({\n  axis = 'horizontal',\n  dashGap = 2,\n  dashLength = 4,\n  dashThickness = 2,\n  dashColor = '#000',\n  dashStyle,\n  style,\n}) => {\n  const [lineLength, setLineLength] = useState(0);\n  const isRow = axis === 'horizontal';\n  const numOfDashes = Math.ceil(lineLength / (dashGap + dashLength));\n\n  const dashStyles = useMemo(\n    () => ({\n      width: isRow ? dashLength : dashThickness,\n      height: isRow ? dashThickness : dashLength,\n      marginRight: isRow ? dashGap : 0,\n      marginBottom: isRow ? 0 : dashGap,\n      backgroundColor: dashColor,\n    }),\n    [dashColor, dashGap, dashLength, dashThickness, isRow],\n  );\n\n  return (\n    <View\n      onLayout={event => {\n        const { width, height } = event.nativeEvent.layout;\n        setLineLength(isRow ? width : height);\n      }}\n      style={[style, isRow ? styles.row : styles.column]}\n    >\n      {[...Array(numOfDashes)].map((_, i) => {\n        // eslint-disable-next-line react/no-array-index-key\n        return <View key={i} style={[dashStyles, dashStyle]} />;\n      })}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n});\n\nexport default DashedLine;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGjD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAQV;EAAA,IAAAC,SAAA,GAAAD,IAAA,CAPJE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,YAAY,GAAAA,SAAA;IAAAE,YAAA,GAAAH,IAAA,CACnBI,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,CAAC,GAAAA,YAAA;IAAAE,eAAA,GAAAL,IAAA,CACXM,UAAU;IAAVA,UAAU,GAAAD,eAAA,cAAG,CAAC,GAAAA,eAAA;IAAAE,kBAAA,GAAAP,IAAA,CACdQ,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,CAAC,GAAAA,kBAAA;IAAAE,cAAA,GAAAT,IAAA,CACjBU,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,MAAM,GAAAA,cAAA;IAClBE,SAAS,GAAAX,IAAA,CAATW,SAAS;IACTC,KAAK,GAAAZ,IAAA,CAALY,KAAK;EAEL,IAAAC,SAAA,GAAoCnB,QAAQ,CAAC,CAAC,CAAC;IAAAoB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAMI,KAAK,GAAGhB,IAAI,KAAK,YAAY;EACnC,IAAMiB,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACL,UAAU,IAAIZ,OAAO,GAAGE,UAAU,CAAC,CAAC;EAElE,IAAMgB,UAAU,GAAG7B,OAAO,CACxB;IAAA,OAAO;MACL8B,KAAK,EAAEL,KAAK,GAAGZ,UAAU,GAAGE,aAAa;MACzCgB,MAAM,EAAEN,KAAK,GAAGV,aAAa,GAAGF,UAAU;MAC1CmB,WAAW,EAAEP,KAAK,GAAGd,OAAO,GAAG,CAAC;MAChCsB,YAAY,EAAER,KAAK,GAAG,CAAC,GAAGd,OAAO;MACjCuB,eAAe,EAAEjB;IACnB,CAAC;EAAA,CAAC,EACF,CAACA,SAAS,EAAEN,OAAO,EAAEE,UAAU,EAAEE,aAAa,EAAEU,KAAK,CACvD,CAAC;EAED,OACEpB,IAAA,CAACH,IAAI;IACHiC,QAAQ,EAAE,SAAAA,SAAAC,KAAK,EAAI;MACjB,IAAAC,qBAAA,GAA0BD,KAAK,CAACE,WAAW,CAACC,MAAM;QAA1CT,KAAK,GAAAO,qBAAA,CAALP,KAAK;QAAEC,MAAM,GAAAM,qBAAA,CAANN,MAAM;MACrBP,aAAa,CAACC,KAAK,GAAGK,KAAK,GAAGC,MAAM,CAAC;IACvC,CAAE;IACFZ,KAAK,EAAE,CAACA,KAAK,EAAEM,KAAK,GAAGe,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACE,MAAM,CAAE;IAAAC,QAAA,EAElDC,kBAAA,CAAIC,KAAK,CAACnB,WAAW,CAAC,EAAEoB,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;MAErC,OAAO3C,IAAA,CAACH,IAAI;QAASiB,KAAK,EAAE,CAACU,UAAU,EAAEX,SAAS;MAAE,GAAlC8B,CAAoC,CAAC;IACzD,CAAC;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMR,MAAM,GAAGrC,UAAU,CAAC8C,MAAM,CAAC;EAC/BR,GAAG,EAAE;IACHS,aAAa,EAAE;EACjB,CAAC;EACDR,MAAM,EAAE;IACNQ,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AAEF,eAAe5C,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}