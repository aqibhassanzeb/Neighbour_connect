{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Tag(_ref) {\n  var iconLeft = _ref.iconLeft,\n    iconRight = _ref.iconRight,\n    _ref$name = _ref.name,\n    name = _ref$name === void 0 ? \"Tag\" : _ref$name,\n    _ref$onPress = _ref.onPress,\n    onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress,\n    _ref$style = _ref.style,\n    style = _ref$style === void 0 ? {\n      backgroundColor: \"#000\",\n      color: \"#fff\",\n      borderRadius: 4,\n      borderWidth: 1\n    } : _ref$style;\n  return _jsxs(TouchableOpacity, {\n    onPress: onPress,\n    style: [styles.container, {\n      backgroundColor: style.backgroundColor,\n      borderWidth: style.borderWidth,\n      borderColor: style.color,\n      borderRadius: style.borderRadius\n    }],\n    children: [_jsx(Icon, {\n      name: iconLeft,\n      style: [styles.icon, {\n        color: style.color\n      }]\n    }), _jsx(Text, {\n      style: [styles.text, {\n        color: style.color\n      }],\n      children: name\n    }), _jsx(Icon, {\n      name: iconRight,\n      style: [styles.icon, {\n        color: style.color\n      }]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    paddingHorizontal: 8,\n    paddingVertical: 4\n  },\n  icon: {\n    fontSize: 16\n  },\n  text: {\n    marginHorizontal: 4,\n    marginTop: -2\n  }\n});","map":{"version":3,"names":["React","StyleSheet","Text","TouchableOpacity","Icon","jsx","_jsx","jsxs","_jsxs","Tag","_ref","iconLeft","iconRight","_ref$name","name","_ref$onPress","onPress","_ref$style","style","backgroundColor","color","borderRadius","borderWidth","styles","container","borderColor","children","icon","text","create","flexDirection","flexWrap","paddingHorizontal","paddingVertical","fontSize","marginHorizontal","marginTop"],"sources":["/home/aqib/projects/finals_code/RN-HomeService/node_modules/react-native-btr/src/Components/Tag.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\n\r\nexport type TagProps = {\r\n  iconLeft?: string;\r\n  iconRight?: string;\r\n  name?: string;\r\n  onPress?: () => void;\r\n  style?: {\r\n    backgroundColor?: string;\r\n    color?: string;\r\n    borderRadius?: number;\r\n    borderWidth?: number;\r\n  };\r\n};\r\n\r\nexport function Tag({\r\n  iconLeft,\r\n  iconRight,\r\n  name = \"Tag\",\r\n  onPress = () => {},\r\n  style = {\r\n    backgroundColor: \"#000\",\r\n    color: \"#fff\",\r\n    borderRadius: 4,\r\n    borderWidth: 1,\r\n  },\r\n}: TagProps) {\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      style={[\r\n        styles.container,\r\n        {\r\n          backgroundColor: style.backgroundColor,\r\n          borderWidth: style.borderWidth,\r\n          borderColor: style.color,\r\n          borderRadius: style.borderRadius,\r\n        },\r\n      ]}\r\n    >\r\n      <Icon\r\n        name={iconLeft}\r\n        style={[\r\n          styles.icon,\r\n          {\r\n            color: style.color,\r\n          },\r\n        ]}\r\n      />\r\n      <Text style={[styles.text, { color: style.color }]}>{name}</Text>\r\n      <Icon\r\n        name={iconRight}\r\n        style={[\r\n          styles.icon,\r\n          {\r\n            color: style.color,\r\n          },\r\n        ]}\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    paddingHorizontal: 8,\r\n    paddingVertical: 4,\r\n  },\r\n  icon: {\r\n    fontSize: 16,\r\n  },\r\n  text: {\r\n    marginHorizontal: 4,\r\n    marginTop: -2,\r\n  },\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE1B,OAAOC,IAAI;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAe3D,OAAO,SAASC,GAAGA,CAAAC,IAAA,EAWN;EAAA,IAVXC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAAC,SAAA,GAAAH,IAAA,CACTI,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,KAAK,GAAAA,SAAA;IAAAE,YAAA,GAAAL,IAAA,CACZM,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,YAAM,CAAC,CAAC,GAAAA,YAAA;IAAAE,UAAA,GAAAP,IAAA,CAClBQ,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG;MACNE,eAAe,EAAE,MAAM;MACvBC,KAAK,EAAE,MAAM;MACbC,YAAY,EAAE,CAAC;MACfC,WAAW,EAAE;IACf,CAAC,GAAAL,UAAA;EAED,OACET,KAAA,CAACL,gBAAgB;IACfa,OAAO,EAAEA,OAAQ;IACjBE,KAAK,EAAE,CACLK,MAAM,CAACC,SAAS,EAChB;MACEL,eAAe,EAAED,KAAK,CAACC,eAAe;MACtCG,WAAW,EAAEJ,KAAK,CAACI,WAAW;MAC9BG,WAAW,EAAEP,KAAK,CAACE,KAAK;MACxBC,YAAY,EAAEH,KAAK,CAACG;IACtB,CAAC,CACD;IAAAK,QAAA,GAEFpB,IAAA,CAACF,IAAI;MACHU,IAAI,EAAEH,QAAS;MACfO,KAAK,EAAE,CACLK,MAAM,CAACI,IAAI,EACX;QACEP,KAAK,EAAEF,KAAK,CAACE;MACf,CAAC;IACD,CACH,CAAC,EACFd,IAAA,CAACJ,IAAI;MAACgB,KAAK,EAAE,CAACK,MAAM,CAACK,IAAI,EAAE;QAAER,KAAK,EAAEF,KAAK,CAACE;MAAM,CAAC,CAAE;MAAAM,QAAA,EAAEZ;IAAI,CAAO,CAAC,EACjER,IAAA,CAACF,IAAI;MACHU,IAAI,EAAEF,SAAU;MAChBM,KAAK,EAAE,CACLK,MAAM,CAACI,IAAI,EACX;QACEP,KAAK,EAAEF,KAAK,CAACE;MACf,CAAC;IACD,CACH,CAAC;EAAA,CACc,CAAC;AAEvB;AAEA,IAAMG,MAAM,GAAGtB,UAAU,CAAC4B,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,aAAa,EAAE,KAAK;IACpBC,QAAQ,EAAE,MAAM;IAChBC,iBAAiB,EAAE,CAAC;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDN,IAAI,EAAE;IACJO,QAAQ,EAAE;EACZ,CAAC;EACDN,IAAI,EAAE;IACJO,gBAAgB,EAAE,CAAC;IACnBC,SAAS,EAAE,CAAC;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}