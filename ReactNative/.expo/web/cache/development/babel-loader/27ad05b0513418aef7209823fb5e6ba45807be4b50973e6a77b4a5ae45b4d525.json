{"ast":null,"code":"import React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function ColorPicker(_ref) {\n  var _ref$colors = _ref.colors,\n    colors = _ref$colors === void 0 ? [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#03A9F4\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#795548\", \"#9E9E9E\", \"#607D8B\"] : _ref$colors,\n    _ref$onSelect = _ref.onSelect,\n    onSelect = _ref$onSelect === void 0 ? function (item) {} : _ref$onSelect,\n    _ref$selectedColor = _ref.selectedColor,\n    selectedColor = _ref$selectedColor === void 0 ? \"#F44336\" : _ref$selectedColor;\n  return _jsx(FlatList, {\n    data: colors,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _jsx(TouchableOpacity, {\n        style: [styles.circle, {\n          backgroundColor: item\n        }],\n        onPress: function onPress() {\n          onSelect(item);\n        },\n        children: selectedColor === item && _jsx(Icon, {\n          name: \"check\",\n          style: {\n            color: \"#fff\",\n            fontSize: 24\n          }\n        })\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return \"key\" + index;\n    },\n    horizontal: true,\n    keyboardShouldPersistTaps: \"always\",\n    style: {\n      maxHeight: 75\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  circle: {\n    width: 50,\n    height: 50,\n    borderRadius: 50,\n    margin: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["React","FlatList","TouchableOpacity","StyleSheet","Icon","jsx","_jsx","ColorPicker","_ref","_ref$colors","colors","_ref$onSelect","onSelect","item","_ref$selectedColor","selectedColor","data","renderItem","_ref2","style","styles","circle","backgroundColor","onPress","children","name","color","fontSize","keyExtractor","index","horizontal","keyboardShouldPersistTaps","maxHeight","create","width","height","borderRadius","margin","justifyContent","alignItems"],"sources":["/home/aqib/projects/finals_code/RN-HomeService/node_modules/react-native-btr/src/Components/ColorPicker.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { FlatList, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\n\r\nexport type ColorPickerProps = {\r\n  colors?: string[];\r\n  onSelect?: (item: string) => void;\r\n  selectedColor?: string;\r\n};\r\n\r\nexport function ColorPicker({\r\n  colors = [\r\n    \"#F44336\",\r\n    \"#E91E63\",\r\n    \"#9C27B0\",\r\n    \"#673AB7\",\r\n    \"#3F51B5\",\r\n    \"#2196F3\",\r\n    \"#03A9F4\",\r\n    \"#00BCD4\",\r\n    \"#009688\",\r\n    \"#4CAF50\",\r\n    \"#8BC34A\",\r\n    \"#CDDC39\",\r\n    \"#FFEB3B\",\r\n    \"#FFC107\",\r\n    \"#FF9800\",\r\n    \"#FF5722\",\r\n    \"#795548\",\r\n    \"#9E9E9E\",\r\n    \"#607D8B\",\r\n  ],\r\n  onSelect = (item: string) => {},\r\n  selectedColor = \"#F44336\",\r\n}: ColorPickerProps) {\r\n  return (\r\n    <FlatList\r\n      data={colors}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity\r\n          style={[styles.circle, { backgroundColor: item }]}\r\n          onPress={() => {\r\n            onSelect(item);\r\n          }}\r\n        >\r\n          {selectedColor === item && (\r\n            <Icon name=\"check\" style={{ color: \"#fff\", fontSize: 24 }} />\r\n          )}\r\n        </TouchableOpacity>\r\n      )}\r\n      keyExtractor={(item, index) => \"key\" + index}\r\n      horizontal={true}\r\n      keyboardShouldPersistTaps=\"always\"\r\n      style={{ maxHeight: 75 }}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  circle: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    margin: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAE1B,OAAOC,IAAI;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAQ3D,OAAO,SAASC,WAAWA,CAAAC,IAAA,EAwBN;EAAA,IAAAC,WAAA,GAAAD,IAAA,CAvBnBE,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,CACP,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,CACV,GAAAA,WAAA;IAAAE,aAAA,GAAAH,IAAA,CACDI,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,UAACE,IAAY,EAAK,CAAC,CAAC,GAAAF,aAAA;IAAAG,kBAAA,GAAAN,IAAA,CAC/BO,aAAa;IAAbA,aAAa,GAAAD,kBAAA,cAAG,SAAS,GAAAA,kBAAA;EAEzB,OACER,IAAA,CAACL,QAAQ;IACPe,IAAI,EAAEN,MAAO;IACbO,UAAU,EAAE,SAAAA,WAAAC,KAAA;MAAA,IAAGL,IAAI,GAAAK,KAAA,CAAJL,IAAI;MAAA,OACjBP,IAAA,CAACJ,gBAAgB;QACfiB,KAAK,EAAE,CAACC,MAAM,CAACC,MAAM,EAAE;UAAEC,eAAe,EAAET;QAAK,CAAC,CAAE;QAClDU,OAAO,EAAE,SAAAA,QAAA,EAAM;UACbX,QAAQ,CAACC,IAAI,CAAC;QAChB,CAAE;QAAAW,QAAA,EAEDT,aAAa,KAAKF,IAAI,IACrBP,IAAA,CAACF,IAAI;UAACqB,IAAI,EAAC,OAAO;UAACN,KAAK,EAAE;YAAEO,KAAK,EAAE,MAAM;YAAEC,QAAQ,EAAE;UAAG;QAAE,CAAE;MAC7D,CACe,CAAC;IAAA,CACnB;IACFC,YAAY,EAAE,SAAAA,aAACf,IAAI,EAAEgB,KAAK;MAAA,OAAK,KAAK,GAAGA,KAAK;IAAA,CAAC;IAC7CC,UAAU,EAAE,IAAK;IACjBC,yBAAyB,EAAC,QAAQ;IAClCZ,KAAK,EAAE;MAAEa,SAAS,EAAE;IAAG;EAAE,CAC1B,CAAC;AAEN;AAEA,IAAMZ,MAAM,GAAGjB,UAAU,CAAC8B,MAAM,CAAC;EAC/BZ,MAAM,EAAE;IACNa,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,EAAE;IACVC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}